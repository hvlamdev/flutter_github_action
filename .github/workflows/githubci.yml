name: "Flutter CICD"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: macos-latest
    steps:
#      - name: Install the Apple certificate and provisioning profile
#        env:
#          BUILD_CERTIFICATE_BASE64: ${{ secrets.APPSTORE_CER_BASE64 }}
#          P12_PASSWORD: ${{ secrets.APPSTORE_CERT_PASSWORD }}
#          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.MOBILEPROVISION_BASE64}}
#          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
#        run: |
#          # create variables
#          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
#          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
#          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
#          # import certificate and provisioning profile from secrets
#          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
#          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
#          # create temporary keychain
#          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
#          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
#          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
#          # import certificate to keychain
#          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
#          security list-keychain -d user -s $KEYCHAIN_PATH
#          # apply provisioning profile
#          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
#          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      # Install flutter
      - name: Flutter get
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.3'
          channel: 'stable'

      - run: flutter --version


      # Install your project's dependencies
      - run: flutter pub get

      # Build and sign the ipa using a single flutter command
      - name: Building IPA
#        run: flutter build ipa --release --export-options-plist=ios/Runner/ExportOptions.plist
        run: flutter build ipa --release

      - name: Build APK
        run: flutter build apk --release

      # Collect the file and upload as artifact
      - name: collect ipa artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-ipa
          # Path to the release files
          path: build/ios/ipa/*.ipa

#      - name: Clean up keychain and provisioning profile
#        if: ${{ always() }}
#        run: |
#          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
#          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision

